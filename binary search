iteration version:
int binarySearch(int* srcArray, int length, int des)
{
	int low = 0;
	int high = length - 1;
	while (low <= high) 
	{
		int middle = low + (high - low) / 2;
		if (des == srcArray[middle]) 
		{
			return middle;
		}
		else if (des < srcArray[middle]) 
		{
			high = middle - 1;
		}
		else 
		{
			low = middle + 1;
		}
	}
	return -1;
}

recursion version:
int BinSearch(int* array,int low,int high,int key)  
{  
    if (low<=high)  
    {  
        int mid = (low+high)/2;  
        if(key == array[mid])  
            return mid;  
        else if(key<array[mid])  
            //移动low和high  
            return BinSearch(array,low,mid-1,key);  
        else if(key>array[mid])  
            return BinSearch(array,mid+1,high,key);  
    }  
    else  
        return -1;  
} 
