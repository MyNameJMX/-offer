#include <cstdlib>
struct ListNode{
	int value;
	ListNode* next;
};
void DeleteNode(ListNode* pListHead, ListNode* pToBeDelete) 
{
	//void DeleteNode(ListNode* pListHead, ListNode* pToBeDelete)
	if ((pListHead == nullptr) || (pToBeDelete == nullptr))
		return;
	ListNode* pPresent = pListHead;
	while (pPresent)
	{
		if (pPresent->next != pToBeDelete)
			pPresent = pPresent->next;
	}
	pPresent->next = pToBeDelete->next;
	delete pToBeDelete;
}

void DeleteNode2(ListNode* pListHead, ListNode* pToBeDelete) 
{
	if ((pListHead == nullptr) || (pToBeDelete == nullptr))
		return;
	if (pToBeDelete->next)//要删除的结点不是尾结点
	{
		ListNode* pNext = pToBeDelete->next;
		*pToBeDelete = *pNext;
		pToBeDelete->next = pNext->next;
		delete pNext;
		pNext = nullptr;
	}
	else if (pListHead == pToBeDelete) //链表只有一个结点，删除该结点
	{
		delete pToBeDelete;
		pToBeDelete = nullptr;
		pListHead = nullptr;
	}
	else //链表不止有一个结点，删除尾结点
	{
		ListNode* pPresent = pListHead;
		while (pPresent->next != pToBeDelete) 
		{
			pPresent = pPresent->next;
		}
		pPresent->next = nullptr;
		delete pToBeDelete;
		pToBeDelete = nullptr;
	}

}
